{"title":"Module 3: Estimating Biomass From Tree Ring Data","markdown":{"yaml":{"title":"Module 3: Estimating Biomass From Tree Ring Data","author":"Andria Dawson and Kelly Heilman","format":{"html":{"code-fold":true}}},"headingText":"Biomass estimation from tree ring and forest census data","containsRefs":false,"markdown":"\n\n\nHow do we get estimates of aboveground biomass and forest carbon from tree diameters and tree ring data?\n\nAllometric equations define the relationship between commonly measured aspects of a tree (usually tree species, diameter, and/or height) and the weight of the tree (aboveground biomass, AGB). These equations are developed through a small set of destructive samples-- this involves sampling tree size, height, and species, measuring tree mass, and developing a quantitative relationship between the commonly measured metric and tree mass.\n\nIn this module we will:\n\n1.  Apply species-specific allometric equations to the Harvard Forest Census dataset to estimate AGB at the time of census\n\n2.  Back-calculate tree diameter from the tree ring data at Harvard Forest\n\n3.  Apply allometric equations to the back-calculated tree diameters at Harvard Forest to estimate a timeseries of AGB.\n\n## 1. Estimating Forest biomass for trees at the time of census\n\n### We will use the allometric equations in the `allodb` R package\n\nThis package is available on github, and we highlight some additional resources here:\n\n-   Citation: Gonzalez-Akre, E.,  Piponiot, C.,  Lepore, M.,  Herrmann, V.,  Lutz, J. A.,  Baltzer, J. L.,  Dick, C. W.,  Gilbert, G. S., He, F.,  Heym, M.,  Huerta, A. I.,  Jansen, P. A.,  Johnson, D. J.,  Knapp, N.,  Král, K.,  Lin, D.,  Malhi, Y.,  McMahon, S. M.,  Myers, J. A., ...  Anderson-Teixeira, K. J. (2022).  [*allodb*: An R package for biomass estimation at globally distributed extratropical forest plots.](https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/2041-210X.13756) *Methods in Ecology and Evolution*,  13,  330--338. <https://doi.org/10.1111/2041-210X.13756>\n\n-   Github repository: <https://github.com/ropensci/allodb/tree/master>\n\n-   Tutorial at Ropensci: <https://docs.ropensci.org/allodb/>\n\n```{R}\n#| echo: FALSE\n#| label: Installing allodb & loading data\n#| warning: false\ndevtools::install_github(\"ropensci/allodb\",upgrade = \"never\")\nlibrary(allodb)\nlibrary(tidyverse)\nlibrary(dplR)\nlibrary(gt)\nlibrary(FIESTA)\nlibrary(reshape2)\nHARV <- readRDS(\"data/tree_data_HARVARD_STAN_v3.1_102020.RDS\")\n\ntaxon.conversion <- data.frame(taxon = HARV$taxa, # TAXA abbreviation\n                               SPCD = c(261, # Eastern Hemlock\n                                        833, # Northern Red Oak\n                                        316, # Red Maple\n                                        371, # Yellow Birch\n                                        531, # American beech\n                                        129, # White Pine\n                                        372, # Grey/Sweet Birch\n                                        837, # Black Oak\n                                        7331# Witch hazel (Hamamelis virginiana) \n                                        ) # using FIA species codes:\n) %>% left_join(., FIESTA::ref_species %>% select(SPCD, COMMON_NAME, GENUS, SPECIES))%>%\n  mutate(`Scientific Name` = paste(GENUS, SPECIES))\n\nTree.ring <- HARV$Xobs %>% left_join(., HARV$Tr)\n\n# get the calendar years\nyear.df <- data.frame(year = max(Tree.ring$year):1, \n                      cal.year = 2012:(2013 - max(Tree.ring$year)))\n\nTree.ring <- Tree.ring %>% left_join(., year.df)\n\nyear.df <- data.frame(year = max(Tree.ring$year):1, \n                      cal.year = 2012:(2013 - max(Tree.ring$year)))\n# set up the lat-long information:\nHARV.ll <- data.frame(site = c(\"LF1\", \"LF2\", \"LF3\"), \n                      lat = c(42.53065, 42.53128, 42.53008), \n                      lon = c(-72.18346, -72.18271, -72.18246))\n\nCensus <- HARV$Dobs %>% left_join(., year.df) %>% \n  rename(\"taxon\" = \"species\")%>%\n  left_join(., taxon.conversion) %>%# combine with taxon-infomation\n  left_join(., HARV.ll) # combine with lat-long information\n\nCensus <- Census %>% \n  mutate(INV.YEAR = ifelse(cal.year >= 1985 & cal.year <= 1991, 1990, cal.year))\n\n\n```\n\nLet's explore allodb's allometric objects and functions.\n\nObjects include:\n\n-   `equations`: an object that has the original allometric reference/citation, location of the data, the type of equation, information on units, and alot of additional information\n\n-   `references`: an object that has citations, authors, etc, for the original reference data\n\n-   `sitespecies`: an object that lists the sites, species, genus, family, and species_code information for some of the example data available with the allodb package\n\n```{R}\n#| echo: FALSE\n## Exploring allodb's obects\ncolnames(equations)\ncolnames(sitespecies)\ncolnames(references)\n\n# there are 242 unique taxa in allodb\nhead(unique(equations$equation_taxa))\n\n# Note that there are many different equation forms included in this database:\nhead(unique(equations$equation_form))\n\n```\n\nHere, we will focus on species from Harvard Forest, so lets see which species we have in our census data. This information is stored in the `taxon` column in the `Census` object:\n\n```{R}\n#| warning: false\n# lets visualize the number of trees sampled at Harvard Forest each census year:\nCensus %>% group_by(taxon, `Scientific Name`, COMMON_NAME, INV.YEAR) %>%\n  summarise(n.trees = n()) %>% \n  group_by(taxon, `Scientific Name`, COMMON_NAME) %>% \n  spread(INV.YEAR, n.trees, fill = 0) %>%\n  ungroup() %>% gt()\n\n# we can also plot this up visually:\n\nggplot(data = Census)+\ngeom_bar(aes(x = as.character(INV.YEAR), fill = `Scientific Name`), position = \"dodge\")+theme_bw()+\nylab(\"Number of Trees Observed\")+\nxlab(\"Inventory Year\")+facet_wrap(~site, ncol = 1)\n\n```\n\nBased on this table and figure, which species do you think will have the largest aboveground biomass?\n\n### Lets use the `get_biomass` function from allodb to get estimates of biomass\n\nThis function requires the following arguments and provides and output of Aboveground biomass in kilograms (kg):\n\n-   `dbh`: diameter at breast height (cm), numeric\n\n-   `genus`: genus of the tree, character\n\n-   `species`: the species name of the tree, character, can be NULL if only genus is known\n\n-   `coords`: a vector (longitude, latitude) of the plot location, or a matrix with 2 columns if trees have individual locations\n\n```{R}\n#| warning: false\n\nrequire(allodb)\n\n# lets get the biomass for the first tree in the Census data (a 36.83 cm Northern Red Oak (Quercus rubra):\n\nCensus.1 <- Census[1,] # first tree\n\nCensus.1$AGB.1 <-\n  get_biomass(\n    dbh = Census.1$dbh ,\n    genus = Census.1$GENUS,\n    species = Census.1$SPECIES,\n    coords = c(Census.1$lon, Census.1$lat)\n  )\n\nCensus.1$AGB\n```\n\nNow lets apply this function to the whole dataset\n\n```{R}\n#| warning: false\n\nll <- matrix(c(Census$lon, Census$lat), nrow = length(Census$lon), ncol = 2, byrow = FALSE, dimnames = NULL)\n\n# here we split up the census by sites \nCensus.LF1 <- Census %>% filter(site %in% \"LF1\")\nLF1.ll <- HARV.ll %>% filter(site %in% \"LF1\")\n\nCensus.LF2 <- Census %>% filter(site %in% \"LF2\")\nLF2.ll <- HARV.ll %>% filter(site %in% \"LF2\")\n\nCensus.LF3 <- Census %>% filter(site %in% \"LF3\")\nLF3.ll <- HARV.ll %>% filter(site %in% \"LF3\")\n\n# get the biomass for each site:\nCensus.LF1$AGB_kg <-\n  get_biomass(\n    dbh = Census.LF1$dbh ,\n    genus = Census.LF1$GENUS,\n    species = Census.LF1$SPECIES,\n    coords = c(LF1.ll$lon, LF1.ll$lat))\n\n\nCensus.LF2$AGB_kg <-\n  get_biomass(\n    dbh = Census.LF2$dbh ,\n    genus = Census.LF2$GENUS,\n    species = Census.LF2$SPECIES,\n    coords = c(LF2.ll$lon, LF2.ll$lat))\n\nCensus.LF3$AGB_kg <-\n  get_biomass(\n    dbh = Census.LF3$dbh ,\n    genus = Census.LF3$GENUS,\n    species = Census.LF3$SPECIES,\n    coords = c(LF3.ll$lon, LF3.ll$lat))\n\nCensus.AGB <- rbind(Census.LF1, Census.LF2, Census.LF3)\n\n\nggplot(data = Census.AGB)+\n  geom_point(aes(x = INV.YEAR, y = AGB_kg, group = ID, color = `Scientific Name`))+\n  geom_line(aes(x = INV.YEAR, y = AGB_kg, group = ID, color = `Scientific Name`))+\n  facet_wrap(~site)+theme_bw()+ylab(\"Tree Aboveground Biomass (kg)\")+xlab(\"Year\")\n\n\n```\n\n### Lets get the total species trajectories of biomass over the census periods:\n\nWhich species are increasing the most over time? Is this what you expected based on the number of trees tallied? Here, we have added lines to visualize the trajectory of taxon AGB over time, but we don't have estimates of variability in annual AGB increment over time.\n\n```{R}\n#| warning: false\nCensus.AGB.sums <- Census.AGB %>% group_by(taxon, `Scientific Name`, site, INV.YEAR) %>% \n  summarise(`Aboveground Biomass` = sum(AGB_kg, na.rm =TRUE))\n\nggplot(data = Census.AGB.sums)+\n  geom_point(aes(x = INV.YEAR, y = `Aboveground Biomass`, color = `Scientific Name`))+\n  geom_line(aes(x = INV.YEAR, y = `Aboveground Biomass`, color = `Scientific Name`))+\n  facet_wrap(~site)+theme_bw()+ylab(\"Taxon Aboveground Biomass (kg)\")+xlab(\"Year\")\n\n```\n\n### What affects the trajectory of AGB over time?\n\nForest demographic processes affecting AGB:\n\n-   ***Recruitment*** of new small trees into the plot\n-   ***Mortality*** of trees (or conversely, survival)\n-   ***Growth*** of existing trees in the plot\n\nCensus data provide an estimate of these processes over the remeasurement period.\n\nRecruitment makes up a small amount of AGB at these plots:\n```{R} \n#| warning: false\n# Recruitment\nrecruit.code.census <- Census.AGB %>% select(site, ID, taxon, AGB_kg, INV.YEAR) %>% \n  group_by(site, ID, taxon) %>%\n  spread( INV.YEAR, AGB_kg, fill = NA) %>%\n  reshape2::melt(., id.vars = c(\"site\", \"ID\", \"taxon\")) %>%\n  arrange(ID, variable) %>% \n  \n  # if there was no measurement in the previous year for the tree, give a recruit code of 1\n  mutate(recruit.code = ifelse(is.na(lag(value)), 1, 0)) %>%\n  \n  # if the current value is NA for the tree, set it to 0\n  mutate(recruit.code = ifelse(is.na(value), 0, recruit.code)) %>% \n  # set all recruit.code in the initial census to 0\n  mutate(recruit.code = ifelse(site %in% \"LF1\" & variable == 1960, 0, \n                               ifelse(site %in% c(\"LF2\", \"LF3\") & variable == 1967, 0, recruit.code))) %>% \n  mutate(Recruitment = ifelse(recruit.code == 1, \"New Recruit\", \"Existing Tree\"))\n\n\nrecruit.code.census %>% filter(ID %in% \"LF1001\")\n\nggplot(data = recruit.code.census) + \n  geom_col(aes(x = variable, y = value, fill = Recruitment), stat = \"identity\")+facet_wrap(~site)+ylab(\"Aboveground Biomass (kg)\")\n```\nThere are some mortality events that remove AGB \n```{R} \n#| warning: false\n# Mortality\nmortality.code.census <- Census.AGB %>% #select(site, ID, taxon, AGB_kg, INV.YEAR) %>% \n  group_by(site, ID) %>%\n  mutate(max.INVYR = max(INV.YEAR, na.rm =TRUE))%>%\n  ungroup()%>%\n  mutate(mort.code = ifelse(INV.YEAR == max.INVYR & finalCond %in% \"dead\", 1, 0)) %>%\n  mutate(Mortality = ifelse(mort.code == 1, \"Dead\", \"Live\"))\n\n\n\n\nggplot(data = mortality.code.census) + \n  geom_col(aes(x = INV.YEAR, y = AGB_kg, fill = Mortality), stat = \"identity\")+facet_wrap(~site)+ylab(\"Aboveground Biomass (kg)\")\n```\nTree and taxon average annual growth and average annual aboveground biomass increment (AGBI) appear to vary across remeasurement periods:\n```{R} \n#| warning: false\n# Growth\nAverage.Growth.census <- mortality.code.census %>% \n  group_by(site, ID) %>%\n  arrange(cal.year) %>% \n  mutate(REMPER = cal.year - lag(cal.year),\n         prevDBH = lag(dbh), \n         prevAGB = lag(AGB_kg)) %>% \n  # if the tree died in the remeasurement period, assume it died halfway through \n  mutate(REMPER.mort.corrected = ifelse(mort.code == 1, REMPER/2, REMPER)) %>%\n  ungroup() %>%\n  mutate(tree.AGBI = (AGB_kg - prevAGB)/REMPER.mort.corrected, \n         tree.growth = (dbh - prevDBH)/REMPER.mort.corrected) \n\n\nggplot(data = Average.Growth.census) + \n  geom_point(aes(x = INV.YEAR, y = tree.AGBI, color = taxon, group = ID))+\n  geom_line(aes(x = INV.YEAR, y = tree.AGBI, color = taxon, group = ID))+ facet_wrap(~site)+ylab(\"Tree Average Aboveground Biomass Increment (kg/year)\")\n\nggplot(data = Average.Growth.census) + \n  geom_point(aes(x = INV.YEAR, y = tree.growth, color = taxon, group = ID))+\n  geom_line(aes(x = INV.YEAR, y = tree.growth, color = taxon, group = ID))+ facet_wrap(~site)+ylab(\"Tree Average Growth Increment (cm/year)\")+xlab(\"Inventory Year\")\n\nsite.avgs <- Average.Growth.census %>% group_by(site, taxon, INV.YEAR)%>%\n  summarise(taxon.AGBI.avg = mean(tree.AGBI, na.rm =TRUE), \n            taxon.DI.avg = mean(tree.AGBI, na.rm =TRUE))\nggplot(data = site.avgs) + \n  geom_point(aes(x = INV.YEAR, y = taxon.DI.avg, color = taxon))+\n  geom_line(aes(x = INV.YEAR, y = taxon.DI.avg, color = taxon))+ facet_wrap(~site)+ylab(\"Taxon Average Growth Increment (cm/year)\")+xlab(\"Inventory Year\")\n\nggplot(data = site.avgs) + \n  geom_point(aes(x = INV.YEAR, y = taxon.AGBI.avg, color = taxon))+\n  geom_line(aes(x = INV.YEAR, y = taxon.AGBI.avg, color = taxon))+ facet_wrap(~site)+ylab(\"Taxon Average AGBI (kg/year)\")+xlab(\"Inventory Year\")\n\n```\nHowever, some remeasurement periods are quite long, and we miss inter-annual variation that could lead to differences in estimates of annual AGBI. Tree-ring data can help us fill in these gaps in our understanding of how AGB varies over time, since they are a direct measurement of annual growth. \n\n## Step 2: Use tree ring data to back-calculate tree diameter at Harvard Forest:\nIn order to use tree ring data to estimate tree AGB, we first need to convert measurements of annual tree growth into estimates of tree diameter. To do this with a single core, we assume that each tree grows symmetrically and in a circle. \n\n### Backcalculating tree diameter using dplR\n```{r}\nlibrary(dplR)\n```\n\n### Step 3: visualizing biomass over time (with no uncertainty)\n\n```{R}\n\n```\n\n## Converting forest biomass to carbon using carbon fractions\n\nThe simplest way of estimating Carbon from tree-level biomass is to assume that the \"carbon fraction,\" that is the fraction of the tree's weight that is made up of Carbon, is 50%, so multiplying your biomass value by 0.5 will give you a mass of Carbon per unit area.\n\nOther carbon fractions are available, for example for live trees vs. dead trees, and for different forest types/species, but for simplicity we will use 0.5 here.\n\n# issues with estimating biomass this way:\n","srcMarkdownNoYaml":"\n\n# Biomass estimation from tree ring and forest census data\n\nHow do we get estimates of aboveground biomass and forest carbon from tree diameters and tree ring data?\n\nAllometric equations define the relationship between commonly measured aspects of a tree (usually tree species, diameter, and/or height) and the weight of the tree (aboveground biomass, AGB). These equations are developed through a small set of destructive samples-- this involves sampling tree size, height, and species, measuring tree mass, and developing a quantitative relationship between the commonly measured metric and tree mass.\n\nIn this module we will:\n\n1.  Apply species-specific allometric equations to the Harvard Forest Census dataset to estimate AGB at the time of census\n\n2.  Back-calculate tree diameter from the tree ring data at Harvard Forest\n\n3.  Apply allometric equations to the back-calculated tree diameters at Harvard Forest to estimate a timeseries of AGB.\n\n## 1. Estimating Forest biomass for trees at the time of census\n\n### We will use the allometric equations in the `allodb` R package\n\nThis package is available on github, and we highlight some additional resources here:\n\n-   Citation: Gonzalez-Akre, E.,  Piponiot, C.,  Lepore, M.,  Herrmann, V.,  Lutz, J. A.,  Baltzer, J. L.,  Dick, C. W.,  Gilbert, G. S., He, F.,  Heym, M.,  Huerta, A. I.,  Jansen, P. A.,  Johnson, D. J.,  Knapp, N.,  Král, K.,  Lin, D.,  Malhi, Y.,  McMahon, S. M.,  Myers, J. A., ...  Anderson-Teixeira, K. J. (2022).  [*allodb*: An R package for biomass estimation at globally distributed extratropical forest plots.](https://besjournals.onlinelibrary.wiley.com/doi/full/10.1111/2041-210X.13756) *Methods in Ecology and Evolution*,  13,  330--338. <https://doi.org/10.1111/2041-210X.13756>\n\n-   Github repository: <https://github.com/ropensci/allodb/tree/master>\n\n-   Tutorial at Ropensci: <https://docs.ropensci.org/allodb/>\n\n```{R}\n#| echo: FALSE\n#| label: Installing allodb & loading data\n#| warning: false\ndevtools::install_github(\"ropensci/allodb\",upgrade = \"never\")\nlibrary(allodb)\nlibrary(tidyverse)\nlibrary(dplR)\nlibrary(gt)\nlibrary(FIESTA)\nlibrary(reshape2)\nHARV <- readRDS(\"data/tree_data_HARVARD_STAN_v3.1_102020.RDS\")\n\ntaxon.conversion <- data.frame(taxon = HARV$taxa, # TAXA abbreviation\n                               SPCD = c(261, # Eastern Hemlock\n                                        833, # Northern Red Oak\n                                        316, # Red Maple\n                                        371, # Yellow Birch\n                                        531, # American beech\n                                        129, # White Pine\n                                        372, # Grey/Sweet Birch\n                                        837, # Black Oak\n                                        7331# Witch hazel (Hamamelis virginiana) \n                                        ) # using FIA species codes:\n) %>% left_join(., FIESTA::ref_species %>% select(SPCD, COMMON_NAME, GENUS, SPECIES))%>%\n  mutate(`Scientific Name` = paste(GENUS, SPECIES))\n\nTree.ring <- HARV$Xobs %>% left_join(., HARV$Tr)\n\n# get the calendar years\nyear.df <- data.frame(year = max(Tree.ring$year):1, \n                      cal.year = 2012:(2013 - max(Tree.ring$year)))\n\nTree.ring <- Tree.ring %>% left_join(., year.df)\n\nyear.df <- data.frame(year = max(Tree.ring$year):1, \n                      cal.year = 2012:(2013 - max(Tree.ring$year)))\n# set up the lat-long information:\nHARV.ll <- data.frame(site = c(\"LF1\", \"LF2\", \"LF3\"), \n                      lat = c(42.53065, 42.53128, 42.53008), \n                      lon = c(-72.18346, -72.18271, -72.18246))\n\nCensus <- HARV$Dobs %>% left_join(., year.df) %>% \n  rename(\"taxon\" = \"species\")%>%\n  left_join(., taxon.conversion) %>%# combine with taxon-infomation\n  left_join(., HARV.ll) # combine with lat-long information\n\nCensus <- Census %>% \n  mutate(INV.YEAR = ifelse(cal.year >= 1985 & cal.year <= 1991, 1990, cal.year))\n\n\n```\n\nLet's explore allodb's allometric objects and functions.\n\nObjects include:\n\n-   `equations`: an object that has the original allometric reference/citation, location of the data, the type of equation, information on units, and alot of additional information\n\n-   `references`: an object that has citations, authors, etc, for the original reference data\n\n-   `sitespecies`: an object that lists the sites, species, genus, family, and species_code information for some of the example data available with the allodb package\n\n```{R}\n#| echo: FALSE\n## Exploring allodb's obects\ncolnames(equations)\ncolnames(sitespecies)\ncolnames(references)\n\n# there are 242 unique taxa in allodb\nhead(unique(equations$equation_taxa))\n\n# Note that there are many different equation forms included in this database:\nhead(unique(equations$equation_form))\n\n```\n\nHere, we will focus on species from Harvard Forest, so lets see which species we have in our census data. This information is stored in the `taxon` column in the `Census` object:\n\n```{R}\n#| warning: false\n# lets visualize the number of trees sampled at Harvard Forest each census year:\nCensus %>% group_by(taxon, `Scientific Name`, COMMON_NAME, INV.YEAR) %>%\n  summarise(n.trees = n()) %>% \n  group_by(taxon, `Scientific Name`, COMMON_NAME) %>% \n  spread(INV.YEAR, n.trees, fill = 0) %>%\n  ungroup() %>% gt()\n\n# we can also plot this up visually:\n\nggplot(data = Census)+\ngeom_bar(aes(x = as.character(INV.YEAR), fill = `Scientific Name`), position = \"dodge\")+theme_bw()+\nylab(\"Number of Trees Observed\")+\nxlab(\"Inventory Year\")+facet_wrap(~site, ncol = 1)\n\n```\n\nBased on this table and figure, which species do you think will have the largest aboveground biomass?\n\n### Lets use the `get_biomass` function from allodb to get estimates of biomass\n\nThis function requires the following arguments and provides and output of Aboveground biomass in kilograms (kg):\n\n-   `dbh`: diameter at breast height (cm), numeric\n\n-   `genus`: genus of the tree, character\n\n-   `species`: the species name of the tree, character, can be NULL if only genus is known\n\n-   `coords`: a vector (longitude, latitude) of the plot location, or a matrix with 2 columns if trees have individual locations\n\n```{R}\n#| warning: false\n\nrequire(allodb)\n\n# lets get the biomass for the first tree in the Census data (a 36.83 cm Northern Red Oak (Quercus rubra):\n\nCensus.1 <- Census[1,] # first tree\n\nCensus.1$AGB.1 <-\n  get_biomass(\n    dbh = Census.1$dbh ,\n    genus = Census.1$GENUS,\n    species = Census.1$SPECIES,\n    coords = c(Census.1$lon, Census.1$lat)\n  )\n\nCensus.1$AGB\n```\n\nNow lets apply this function to the whole dataset\n\n```{R}\n#| warning: false\n\nll <- matrix(c(Census$lon, Census$lat), nrow = length(Census$lon), ncol = 2, byrow = FALSE, dimnames = NULL)\n\n# here we split up the census by sites \nCensus.LF1 <- Census %>% filter(site %in% \"LF1\")\nLF1.ll <- HARV.ll %>% filter(site %in% \"LF1\")\n\nCensus.LF2 <- Census %>% filter(site %in% \"LF2\")\nLF2.ll <- HARV.ll %>% filter(site %in% \"LF2\")\n\nCensus.LF3 <- Census %>% filter(site %in% \"LF3\")\nLF3.ll <- HARV.ll %>% filter(site %in% \"LF3\")\n\n# get the biomass for each site:\nCensus.LF1$AGB_kg <-\n  get_biomass(\n    dbh = Census.LF1$dbh ,\n    genus = Census.LF1$GENUS,\n    species = Census.LF1$SPECIES,\n    coords = c(LF1.ll$lon, LF1.ll$lat))\n\n\nCensus.LF2$AGB_kg <-\n  get_biomass(\n    dbh = Census.LF2$dbh ,\n    genus = Census.LF2$GENUS,\n    species = Census.LF2$SPECIES,\n    coords = c(LF2.ll$lon, LF2.ll$lat))\n\nCensus.LF3$AGB_kg <-\n  get_biomass(\n    dbh = Census.LF3$dbh ,\n    genus = Census.LF3$GENUS,\n    species = Census.LF3$SPECIES,\n    coords = c(LF3.ll$lon, LF3.ll$lat))\n\nCensus.AGB <- rbind(Census.LF1, Census.LF2, Census.LF3)\n\n\nggplot(data = Census.AGB)+\n  geom_point(aes(x = INV.YEAR, y = AGB_kg, group = ID, color = `Scientific Name`))+\n  geom_line(aes(x = INV.YEAR, y = AGB_kg, group = ID, color = `Scientific Name`))+\n  facet_wrap(~site)+theme_bw()+ylab(\"Tree Aboveground Biomass (kg)\")+xlab(\"Year\")\n\n\n```\n\n### Lets get the total species trajectories of biomass over the census periods:\n\nWhich species are increasing the most over time? Is this what you expected based on the number of trees tallied? Here, we have added lines to visualize the trajectory of taxon AGB over time, but we don't have estimates of variability in annual AGB increment over time.\n\n```{R}\n#| warning: false\nCensus.AGB.sums <- Census.AGB %>% group_by(taxon, `Scientific Name`, site, INV.YEAR) %>% \n  summarise(`Aboveground Biomass` = sum(AGB_kg, na.rm =TRUE))\n\nggplot(data = Census.AGB.sums)+\n  geom_point(aes(x = INV.YEAR, y = `Aboveground Biomass`, color = `Scientific Name`))+\n  geom_line(aes(x = INV.YEAR, y = `Aboveground Biomass`, color = `Scientific Name`))+\n  facet_wrap(~site)+theme_bw()+ylab(\"Taxon Aboveground Biomass (kg)\")+xlab(\"Year\")\n\n```\n\n### What affects the trajectory of AGB over time?\n\nForest demographic processes affecting AGB:\n\n-   ***Recruitment*** of new small trees into the plot\n-   ***Mortality*** of trees (or conversely, survival)\n-   ***Growth*** of existing trees in the plot\n\nCensus data provide an estimate of these processes over the remeasurement period.\n\nRecruitment makes up a small amount of AGB at these plots:\n```{R} \n#| warning: false\n# Recruitment\nrecruit.code.census <- Census.AGB %>% select(site, ID, taxon, AGB_kg, INV.YEAR) %>% \n  group_by(site, ID, taxon) %>%\n  spread( INV.YEAR, AGB_kg, fill = NA) %>%\n  reshape2::melt(., id.vars = c(\"site\", \"ID\", \"taxon\")) %>%\n  arrange(ID, variable) %>% \n  \n  # if there was no measurement in the previous year for the tree, give a recruit code of 1\n  mutate(recruit.code = ifelse(is.na(lag(value)), 1, 0)) %>%\n  \n  # if the current value is NA for the tree, set it to 0\n  mutate(recruit.code = ifelse(is.na(value), 0, recruit.code)) %>% \n  # set all recruit.code in the initial census to 0\n  mutate(recruit.code = ifelse(site %in% \"LF1\" & variable == 1960, 0, \n                               ifelse(site %in% c(\"LF2\", \"LF3\") & variable == 1967, 0, recruit.code))) %>% \n  mutate(Recruitment = ifelse(recruit.code == 1, \"New Recruit\", \"Existing Tree\"))\n\n\nrecruit.code.census %>% filter(ID %in% \"LF1001\")\n\nggplot(data = recruit.code.census) + \n  geom_col(aes(x = variable, y = value, fill = Recruitment), stat = \"identity\")+facet_wrap(~site)+ylab(\"Aboveground Biomass (kg)\")\n```\nThere are some mortality events that remove AGB \n```{R} \n#| warning: false\n# Mortality\nmortality.code.census <- Census.AGB %>% #select(site, ID, taxon, AGB_kg, INV.YEAR) %>% \n  group_by(site, ID) %>%\n  mutate(max.INVYR = max(INV.YEAR, na.rm =TRUE))%>%\n  ungroup()%>%\n  mutate(mort.code = ifelse(INV.YEAR == max.INVYR & finalCond %in% \"dead\", 1, 0)) %>%\n  mutate(Mortality = ifelse(mort.code == 1, \"Dead\", \"Live\"))\n\n\n\n\nggplot(data = mortality.code.census) + \n  geom_col(aes(x = INV.YEAR, y = AGB_kg, fill = Mortality), stat = \"identity\")+facet_wrap(~site)+ylab(\"Aboveground Biomass (kg)\")\n```\nTree and taxon average annual growth and average annual aboveground biomass increment (AGBI) appear to vary across remeasurement periods:\n```{R} \n#| warning: false\n# Growth\nAverage.Growth.census <- mortality.code.census %>% \n  group_by(site, ID) %>%\n  arrange(cal.year) %>% \n  mutate(REMPER = cal.year - lag(cal.year),\n         prevDBH = lag(dbh), \n         prevAGB = lag(AGB_kg)) %>% \n  # if the tree died in the remeasurement period, assume it died halfway through \n  mutate(REMPER.mort.corrected = ifelse(mort.code == 1, REMPER/2, REMPER)) %>%\n  ungroup() %>%\n  mutate(tree.AGBI = (AGB_kg - prevAGB)/REMPER.mort.corrected, \n         tree.growth = (dbh - prevDBH)/REMPER.mort.corrected) \n\n\nggplot(data = Average.Growth.census) + \n  geom_point(aes(x = INV.YEAR, y = tree.AGBI, color = taxon, group = ID))+\n  geom_line(aes(x = INV.YEAR, y = tree.AGBI, color = taxon, group = ID))+ facet_wrap(~site)+ylab(\"Tree Average Aboveground Biomass Increment (kg/year)\")\n\nggplot(data = Average.Growth.census) + \n  geom_point(aes(x = INV.YEAR, y = tree.growth, color = taxon, group = ID))+\n  geom_line(aes(x = INV.YEAR, y = tree.growth, color = taxon, group = ID))+ facet_wrap(~site)+ylab(\"Tree Average Growth Increment (cm/year)\")+xlab(\"Inventory Year\")\n\nsite.avgs <- Average.Growth.census %>% group_by(site, taxon, INV.YEAR)%>%\n  summarise(taxon.AGBI.avg = mean(tree.AGBI, na.rm =TRUE), \n            taxon.DI.avg = mean(tree.AGBI, na.rm =TRUE))\nggplot(data = site.avgs) + \n  geom_point(aes(x = INV.YEAR, y = taxon.DI.avg, color = taxon))+\n  geom_line(aes(x = INV.YEAR, y = taxon.DI.avg, color = taxon))+ facet_wrap(~site)+ylab(\"Taxon Average Growth Increment (cm/year)\")+xlab(\"Inventory Year\")\n\nggplot(data = site.avgs) + \n  geom_point(aes(x = INV.YEAR, y = taxon.AGBI.avg, color = taxon))+\n  geom_line(aes(x = INV.YEAR, y = taxon.AGBI.avg, color = taxon))+ facet_wrap(~site)+ylab(\"Taxon Average AGBI (kg/year)\")+xlab(\"Inventory Year\")\n\n```\nHowever, some remeasurement periods are quite long, and we miss inter-annual variation that could lead to differences in estimates of annual AGBI. Tree-ring data can help us fill in these gaps in our understanding of how AGB varies over time, since they are a direct measurement of annual growth. \n\n## Step 2: Use tree ring data to back-calculate tree diameter at Harvard Forest:\nIn order to use tree ring data to estimate tree AGB, we first need to convert measurements of annual tree growth into estimates of tree diameter. To do this with a single core, we assume that each tree grows symmetrically and in a circle. \n\n### Backcalculating tree diameter using dplR\n```{r}\nlibrary(dplR)\n```\n\n### Step 3: visualizing biomass over time (with no uncertainty)\n\n```{R}\n\n```\n\n## Converting forest biomass to carbon using carbon fractions\n\nThe simplest way of estimating Carbon from tree-level biomass is to assume that the \"carbon fraction,\" that is the fraction of the tree's weight that is made up of Carbon, is 50%, so multiplying your biomass value by 0.5 will give you a mass of Carbon per unit area.\n\nOther carbon fractions are available, for example for live trees vs. dead trees, and for different forest types/species, but for simplicity we will use 0.5 here.\n\n# issues with estimating biomass this way:\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Module_3_Biomass_estimation.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.43","callout-appearance":"simple","date":"today","date-format":"iso","editor":"visual","theme":{"light":"flatly","dark":"solar"},"title":"Module 3: Estimating Biomass From Tree Ring Data","author":"Andria Dawson and Kelly Heilman"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}